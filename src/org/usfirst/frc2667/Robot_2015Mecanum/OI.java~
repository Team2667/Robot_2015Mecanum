// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2667.Robot_2015Mecanum;

import org.usfirst.frc2667.Robot_2015Mecanum.commands.ArcadeDrive;
import org.usfirst.frc2667.Robot_2015Mecanum.commands.ArcadeDriveSlow;
import org.usfirst.frc2667.Robot_2015Mecanum.commands.DriveToStart;
import org.usfirst.frc2667.Robot_2015Mecanum.commands.ElevatorDown;
import org.usfirst.frc2667.Robot_2015Mecanum.commands.ElevatorUp;
import org.usfirst.frc2667.Robot_2015Mecanum.commands.ElevatorUpAuto;
import org.usfirst.frc2667.Robot_2015Mecanum.commands.LowerElevatorSlightly;
import org.usfirst.frc2667.Robot_2015Mecanum.commands.MecanumAutonomous;
import org.usfirst.frc2667.Robot_2015Mecanum.commands.StopDriveTrain;
import org.usfirst.frc2667.Robot_2015Mecanum.commands.TurnAround;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);
    
    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.
    
    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:
    
    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());
    
    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());
    
    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());

    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton elevatorUpButton;
    public JoystickButton elevatorDownButton;
    public JoystickButton slowDriveButton;
    public JoystickButton lowerElevatorSlightlyButton;
    public Joystick joystick;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        joystick = new Joystick(0);
        
        lowerElevatorSlightlyButton = new JoystickButton(joystick, 4);
        lowerElevatorSlightlyButton.whenPressed(new LowerElevatorSlightly());
        slowDriveButton = new JoystickButton(joystick, 7);
        slowDriveButton.whileHeld(new ArcadeDriveSlow());
        elevatorDownButton = new JoystickButton(joystick, 8);
        elevatorDownButton.whileHeld(new ElevatorDown());
        elevatorUpButton = new JoystickButton(joystick, 6);
        elevatorUpButton.whileHeld(new ElevatorUp());

	    
        // SmartDashboard Buttons
        SmartDashboard.putData("Arcade Drive", new ArcadeDrive());

        SmartDashboard.putData("ElevatorUp", new ElevatorUp());

        SmartDashboard.putData("ElevatorDown", new ElevatorDown());

        SmartDashboard.putData("StopDriveTrain", new StopDriveTrain());

        SmartDashboard.putData("DriveToStart", new DriveToStart());

        SmartDashboard.putData("MecanumAutonomous ", new MecanumAutonomous());

        SmartDashboard.putData("ElevatorUpAuto", new ElevatorUpAuto());

        SmartDashboard.putData("ArcadeDriveSlow", new ArcadeDriveSlow());

        SmartDashboard.putData("LowerElevatorSlightly", new LowerElevatorSlightly());

        SmartDashboard.putData("TurnAround", new TurnAround());


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getJoystick() {
        return joystick;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

